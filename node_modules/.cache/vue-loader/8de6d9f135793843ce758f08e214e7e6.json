{"remainingRequest":"/Users/zhuyuanbiao/Desktop/travel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuyuanbiao/Desktop/travel/src/components/city/City.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuyuanbiao/Desktop/travel/src/components/city/City.vue","mtime":1573717512409},{"path":"/Users/zhuyuanbiao/Desktop/travel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuyuanbiao/Desktop/travel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyuanbiao/Desktop/travel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDaXR5SGVhZGVyIGZyb20gJy4vQ2l0eUhlYWRlcicKaW1wb3J0IFNlYXJjaCBmcm9tICcuL1NlYXJjaCcKaW1wb3J0IExpc3QgZnJvbSAnLi9MaXN0JwppbXBvcnQgQWxwaGFiZXQgZnJvbSAnLi9BbHBoYWJldCcKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGhvdENpdGllczogW10sCiAgICAgICAgICAgIGNpdHlMaXN0OiB7fSwKICAgICAgICAgICAgbGV0dGVyOiAnJwogICAgICAgIH0KICAgIH0sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgQ2l0eUhlYWRlciwKICAgICAgICBTZWFyY2gsCiAgICAgICAgTGlzdCwKICAgICAgICBBbHBoYWJldAogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBnZXRDaXR5SW5mbygpIHsKICAgICAgICAgICAgYXhpb3MuZ2V0KCdtb2NrL2NpdHkuanNvbicpLnRoZW4odGhpcy5jaXR5U3VjYykKICAgICAgICB9LAogICAgICAgIGNpdHlTdWNjKHJlcykgewogICAgICAgICAgICBsZXQgZGF0YSA9IHJlcy5kYXRhLmRhdGEKICAgICAgICAgICAgdGhpcy5jaXR5TGlzdCA9IGRhdGEuY2l0aWVzCiAgICAgICAgICAgIHRoaXMuaG90Q2l0aWVzID0gZGF0YS5ob3RDaXRpZXMKICAgICAgICB9LAogICAgICAgIF9sZXR0ZXJDaGFuZ2UobGV0dGVyKSB7CiAgICAgICAgICAgIHRoaXMubGV0dGVyID0gbGV0dGVyCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5nZXRDaXR5SW5mbygpCiAgICB9Cn0K"},{"version":3,"sources":["City.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"City.vue","sourceRoot":"src/components/city","sourcesContent":["<template>\n    <div>\n        <city-header/>\n        <search :cityList=\"cityList\" />\n        <list :letter=\"letter\" :cityList=\"cityList\" :hotCities=\"hotCities\" />\n        <alphabet :cityList=\"cityList\" @change=\"_letterChange\" />\n    </div>\n</template>\n<script>\n    import CityHeader from './CityHeader'\n    import Search from './Search'\n    import List from './List'\n    import Alphabet from './Alphabet'\n    import axios from 'axios'\n    export default {\n        data() {\n            return {\n                hotCities: [],\n                cityList: {},\n                letter: ''\n            }\n        },\n        components: {\n            CityHeader,\n            Search,\n            List,\n            Alphabet\n        },\n        methods: {\n            getCityInfo() {\n                axios.get('mock/city.json').then(this.citySucc)\n            },\n            citySucc(res) {\n                let data = res.data.data\n                this.cityList = data.cities\n                this.hotCities = data.hotCities\n            },\n            _letterChange(letter) {\n                this.letter = letter\n            }\n        },\n        mounted() {\n            this.getCityInfo()\n        }\n    }\n</script>\n<style scoped>\n\n</style>"]}]}