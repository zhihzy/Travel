{"remainingRequest":"/Users/zhuyuanbiao/Desktop/travel/node_modules/babel-loader/lib/index.js!/Users/zhuyuanbiao/Desktop/travel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhuyuanbiao/Desktop/travel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuyuanbiao/Desktop/travel/src/components/city/City.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuyuanbiao/Desktop/travel/src/components/city/City.vue","mtime":1574073673558},{"path":"/Users/zhuyuanbiao/Desktop/travel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyuanbiao/Desktop/travel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuyuanbiao/Desktop/travel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyuanbiao/Desktop/travel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENpdHlIZWFkZXIgZnJvbSAiLi9DaXR5SGVhZGVyIjsKaW1wb3J0IFNlYXJjaCBmcm9tICIuL1NlYXJjaCI7CmltcG9ydCBMaXN0IGZyb20gIi4vTGlzdCI7CmltcG9ydCBBbHBoYWJldCBmcm9tICIuL0FscGhhYmV0IjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBob3RDaXRpZXM6IFtdLAogICAgICBjaXR5TGlzdDoge30sCiAgICAgIGxldHRlcjogJycsCiAgICAgIHNob3dXb3JkOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIENpdHlIZWFkZXI6IENpdHlIZWFkZXIsCiAgICBTZWFyY2g6IFNlYXJjaCwKICAgIExpc3Q6IExpc3QsCiAgICBBbHBoYWJldDogQWxwaGFiZXQKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldENpdHlJbmZvOiBmdW5jdGlvbiBnZXRDaXR5SW5mbygpIHsKICAgICAgYXhpb3MuZ2V0KCdtb2NrL2NpdHkuanNvbicpLnRoZW4odGhpcy5jaXR5U3VjYyk7CiAgICB9LAogICAgY2l0eVN1Y2M6IGZ1bmN0aW9uIGNpdHlTdWNjKHJlcykgewogICAgICB2YXIgZGF0YSA9IHJlcy5kYXRhLmRhdGE7CiAgICAgIHRoaXMuY2l0eUxpc3QgPSBkYXRhLmNpdGllczsKICAgICAgdGhpcy5ob3RDaXRpZXMgPSBkYXRhLmhvdENpdGllczsKICAgIH0sCiAgICBfbGV0dGVyQ2hhbmdlOiBmdW5jdGlvbiBfbGV0dGVyQ2hhbmdlKGxldHRlcikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5sZXR0ZXIgPSBsZXR0ZXI7CiAgICAgIHRoaXMuc2hvd1dvcmQgPSB0cnVlOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5zaG93V29yZCA9IGZhbHNlOwogICAgICB9LCA1MDApOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0Q2l0eUluZm8oKTsKICB9Cn07"},{"version":3,"sources":["City.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,OAAA,UAAA;AACA,OAAA,MAAA;AACA,OAAA,IAAA;AACA,OAAA,QAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,MAAA,EAAA,MAFA;AAGA,IAAA,IAAA,EAAA,IAHA;AAIA,IAAA,QAAA,EAAA;AAJA,GATA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,IAAA,CAAA,KAAA,QAAA;AACA,KAHA;AAIA,IAAA,QAJA,oBAIA,GAJA,EAIA;AACA,UAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,WAAA,QAAA,GAAA,IAAA,CAAA,MAAA;AACA,WAAA,SAAA,GAAA,IAAA,CAAA,SAAA;AACA,KARA;AASA,IAAA,aATA,yBASA,MATA,EASA;AAAA;;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,KAAA;AACA,OAFA,EAEA,GAFA,CAAA;AAGA;AAfA,GAfA;AAgCA,EAAA,OAhCA,qBAgCA;AACA,SAAA,WAAA;AACA;AAlCA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"word\" v-show=\"showWord\">\n            <span>{{letter}}</span>\n        </div>\n        <city-header/>\n        <search :cityList=\"cityList\" />\n        <list :letter=\"letter\" :cityList=\"cityList\" :hotCities=\"hotCities\" />\n        <alphabet :cityList=\"cityList\" @change=\"_letterChange\" />\n    </div>\n</template>\n<script>\n    import CityHeader from './CityHeader'\n    import Search from './Search'\n    import List from './List'\n    import Alphabet from './Alphabet'\n    import axios from 'axios'\n    export default {\n        data() {\n            return {\n                hotCities: [],\n                cityList: {},\n                letter: '',\n                showWord: false\n            }\n        },\n        components: {\n            CityHeader,\n            Search,\n            List,\n            Alphabet\n        },\n        methods: {\n            getCityInfo() {\n                axios.get('mock/city.json').then(this.citySucc)\n            },\n            citySucc(res) {\n                let data = res.data.data\n                this.cityList = data.cities\n                this.hotCities = data.hotCities\n            },\n            _letterChange(letter) {\n                this.letter = letter\n                this.showWord = true\n                setTimeout(() => {\n                    this.showWord = false\n                }, 500)\n            }\n        },\n        mounted() {\n            this.getCityInfo()\n        }\n    }\n</script>\n<style scoped>\n.word{\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    z-index: 9;\n}\n.word span {\n    width: 3rem;\n    height: 3rem;\n    border-radius: .3rem;\n    display: inline-block;\n    background: rgba(0, 0, 0, .3);\n    display: flex;\n    color: #fff;\n    justify-content: center;\n    align-items: center;\n}\n</style>"],"sourceRoot":"src/components/city"}]}